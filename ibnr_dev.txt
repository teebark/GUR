create or replace PACKAGE BODY                                                                                             PKG_IBNR_RESERVE AS   
PROCEDURE process_ibnr_rsrv_rcrds_btch (parm_targets IN gurowner.ibnr_targets%rowtype, 
  account_date in Date, parmbuf out varchar2, parmcode out varchar2,
  limit_in IN PLS_INTEGER DEFAULT 200)
  is
  /*--------------------------------------------------------------
  Stored procedure for Ground Up Reserving, IBNR process.
  Input table is from Data Migrator, which provides the Earned Exposure data.
  Bulk collection is used instead of select/fetch as it's more
  efficient for large tables. As bulk collection can create 
  memory problems, smaller numbers of rows are read at a time to 
  alleviate this problem. The number of rows processed at a time
  is determined by the value for limit_in.
  The code is executed multiple times, using ibnr_targets as
  a driver. This procedure, process_ibnr_rsrv_rcrds_btch, is called by 
  process_ibnr_rsrv_rcrds.
  Each row of the targets table executes the complete code.
  Parms:
  1. parm_targets--a targets row, passed from process_ibnr_rsrv_rcrds.
  2. account_date--as of processing date, passed from process_ibnr_rsrv_rcrds.
  3. parmbuf--return error message to process_ibnr_rsrv_rcrds.
  4. parmcode--return error code to process_ibnr_rsrv_rcrds.
  5. limit_in--a value for the   number of records that cursor c1 uses for each
     bulk collection. Defaults to 100.
  Input:
  1. Earned Exposure table, via Data Migrator.
  2. ibnr_targets--this is the driver table for executing the code. The data
     from this table is passed through a parm from process_ibnr_rsrv_rcrds.
  3. The 9 common grouping tables--for determing what rows to process.
  4. ibnr_factors--for computing adjustment values.
  Output:
  1. ibnr_adj_run--one row is created for each avg_targets row. It
     contains an ID column as a parent key for the ibnr_adjstmnts
     table. The ID key is generated by an Oracle sequence table.
  2. ibnr_adjstmnts--copy of all input rows processed, with field
     caseadj containing the spread amount.
  Program logic:
  1. User cursor c2 to read the driver table, ibnr_targets.
  2. For each row of ibnr_targets, call procedure process_ibnr_rsv_rcrds.btch.
     Use cursor c1 to process each row selected by the grouping
     tables.
  3. Call c1 two times--the first time to get summaries, the 
     second time to compute the spread and create the output 
     table.
  4. If there are more rows in ibnr_targets to process, loop
     again, starting at #1, until there are no more rows.
  ----------------------------------------------------------
  Changed       By               Description
  ---------- -------- --------------------------------------
  2016/02/03 T.Barker Removed state from target grouping and
                      replaced coverage with paired coverage/
                      state grouping.
  2016/02/24 T.Barker Added run_log table.
  2016/02/26 T.Barker Added new balance table and balance
                      processing.
  ----------------------------------------------------------*/
  target_id       parm_targets.ibnr_targets_id%type := parm_targets.ibnr_targets_id;
  target          parm_targets.trgt%type           := parm_targets.trgt;
  target_filename parm_targets.filename%type       := parm_targets.filename;
  target_yrs      parm_targets.yrs_insrd_fctr%type := parm_targets.yrs_insrd_fctr;
  target_veh      parm_targets.vhcl_typ_fctr%type  := parm_targets.vhcl_typ_fctr;
  ee_anew       GUROWNER.mnthly_expsre.ernd_expsre%type;
  ee_assn       GUROWNER.mnthly_expsre.ernd_expsre%type; 
  ee_rnew       GUROWNER.mnthly_expsre.ernd_expsre%type; 
  ee_rssn       GUROWNER.mnthly_expsre.ernd_expsre%type; 
  c_yes char(1) := 'Y';
  c_ibnr char(1) := 'I';
  c_zero number(1) := 0;
  c_one number(1) := 1;
  c_two char(1) := '2';
  c_120  number(3) := 120;
  run_log_seq number(38,0);
  ibnr_dt date;
  ageMonths number(5) := null;
  freq number(8);
  adj number(8,4);
  emer number(8,4);
  sever number(8);
  auto_new_exp  number(18,8) :=0;
  auto_ssn_exp  number(18,8) :=0;
  rv_new_exp  number(18,8) :=0;
  rv_ssn_exp  number(18,8) :=0;
  total_wt_exp number(18,8) :=0;
  auto_new_res  number(18,8) :=0;
  auto_ssn_res  number(17,7) :=0;
  rv_new_res  number(18,8) :=0;
  rv_ssn_res  number(18,8) :=0;
  total_res number(18,8) :=0;
  auto_new_pp  number(18,8) :=0;
  auto_ssn_pp  number(18,8) :=0;
  rv_new_pp  number(18,8) :=0;
  rv_ssn_pp  number(18,8) :=0;
  total_wt_pp number(18,8) :=0;
  auto_new_exp_sum number(18,8) :=0;
  auto_ssn_exp_sum number(18,8) :=0;
  rv_new_exp_sum number(18,8) :=0;
  rv_ssn_exp_sum number(18,8) :=0;
  total_auto_rv_exp number(18,8) := 0;
  auto_new_targ  number(18,8) :=0;
  auto_ssn_targ  number(18,8) :=0;
  rv_new_targ  number(18,8) :=0;
  rv_ssn_targ  number(18,8) :=0;
  total_ibnr_res number(18,8) :=0;
  grand_ibnr_res number(18,8) :=0;
  adj_amt number(15,2) := 0;
  i integer := 0;
  firstbuf varchar2(100) := null;
  firstcode varchar2(3) := null;
  total_exp number (20,5) := 0;
  total_exp_num number (20) := 0;
  balance_exp number (20,5) := 0;
  balance_exp_num number (20) := 0;
  /*----------------------------------------------------------
  Set up to trap an overflow condition on any of the adjustment
  amount fields.
  ----------------------------------------------------------*/
  ibnr_overflow EXCEPTION;
  PRAGMA EXCEPTION_INIT(ibnr_overflow,-01438);
  /*----------------------------------------------------------
  This cursor has the following functions:
  1. Filter by the 9 group attributes.
  ----------------------------------------------------------*/
  cursor c1 is
    select ACCNT_MNTH, CMPNY_CD, RSK_SGMT_CD, RT_STRCTR_CD, ACCNT_YR,
      RT_ST_CD, LOB_CD, VHCL_TYP_CD, PRVT_PSNGR_CD, YRS_INSRD_CD, 
      CVRG_CD, ERND_EXPSRE,
      age, exp_freq_fctr as freq, cal_yr_adj_fctr as adj, emrgnc_fctr as emer, 
      svrty as sever
    from GUROWNER.mnthly_expsre ta
    inner join gurowner.ibnr_factors
       on ibnr_severity_id = target_id 
       and age = floor(months_between(account_date,to_date(accnt_mnth || '01' || accnt_yr,'mmddyy'))) + c_one
    /*----------------------------------------------
    Limit accnt date to 10 yrs back (120 months)
    -----------------------------------------------*/
    where to_date(accnt_mnth || '01' || accnt_yr,'mmddyy') > add_months(account_date,-c_120)
    and exists
      (select 1
       from gurowner.res_cmpny_grp a
       where a.cmpny_grp = parm_targets.cmpny_grp
       and a.cmpny_cd = ta.cmpny_cd
       and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
     and cvrg_cd || rt_st_cd in
      (select b.cvrg_cd || a.rt_st_cd
       from gurowner.cvrg_rt_st_grp a
       inner join gurowner.res_cvrg_grp b
       on a.cvrg_rt_st_grp = parm_targets.cvrg_rt_st_grp
       and a.cvrg_grp = b.cvrg_grp
       and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr
       and b.ACTV_IN=c_yes and b.RSRV_TYP=c_ibnr)
     /*-----------------------------------------------------------
       Rated state and company group comparison are immediately above.
       You'll need to uncomment the other 7 tables when the UI team 
       populates dev_targets and the group tables with valid data.                                               
       ----------------------------------------------------------*/
      and exists
      (select 1
       from gurowner.res_lob_grp a
       where a.lob_grp = parm_targets.lob_grp
       and a.LOB_CD = ta.LOB_CD
       and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
      --and exists
      --(select 1
      -- from gurowner.res_rsk_sgmt_grp a
      -- where a.rsk_sgmt_grp = parm_targets.rsk_sgmt_grp
      -- and a.rsk_sgmt_cd = ta.rsk_sgmt_cd
      -- and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
      --and exists
      --(select 1
      -- from gurowner.res_rt_strctr_grp a
      -- where a.rt_strctr_grp = parm_targets.rt_strctr_grp
      -- and a.rt_strctr_cd = ta.rt_strctr_cd
      -- and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
      --and exists
      --(select 1
      -- from gurowner.prm_vhcl_typ_grp a
      -- where a.prm_vhcl_typ_grp = parm_targets.vhcl_typ_grp
      -- and a.prm_vhcl_typ_cd = ta.vhcl_typ_cd
      -- and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
      ---and exists
      --(select 1
      -- from gurowner.yrs_insrd_grp a
      -- where a.yrs_insrd_grp = parm_targets.yrs_insrd_grp
      -- and a.yrs_insrd_cd = ta.yrs_insrd_cd
      -- and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
      --and exists
      --(select 1
      -- from gurowner.prvt_psngr_grp a
      -- where a.prvt_psngr_grp = parm_targets.prvt_psngr_grp
      -- and a.prvt_psngr_cd = ta.prvt_psngr_cd
      -- and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
--and rownum <= 20000;
--and accnt_yr > '2014'
  order by accnt_yr, ACCNT_MNTH, CMPNY_CD, RSK_SGMT_CD, RT_STRCTR_CD, 
      RT_ST_CD, LOB_CD, VHCL_TYP_CD, PRVT_PSNGR_CD, YRS_INSRD_CD, 
      CVRG_CD;
    TYPE ibnr_aat IS TABLE OF c1%ROWTYPE
        INDEX BY PLS_INTEGER;
    l_ibnr ibnr_aat;
  BEGIN
    /*----------------------------------------------------------
    Write title line for first pass calculations.
    ----------------------------------------------------------*/
    --DBMS_OUTPUT.PUT_LINE('CO ST  SNAP_DT  LOB  VEH  COV    AGE  FREQ  ADJ  EMER  ' ||  
    --  'SVRTY YRS  VTYP   EE ANEW   EE ASSN   EE RNEW   EE RSSN   TOT EE  ' ||
    --  'RES ANEW  RES ASSN  RES RNEW  RES RSSN  TOT RES  TOT AUTO-RV');
    /*----------------------------------------------------------
    Collect balance totals. This SQL is the same as C1, except
    for the join on factor table--we don't need that calculation.
    ----------------------------------------------------------*/
    select sum(ERND_EXPSRE), count(*)
    into balance_exp, balance_exp_num
    from GUROWNER.mnthly_expsre ta
    inner join gurowner.ibnr_factors
       on ibnr_severity_id = target_id 
       and age = floor(months_between(account_date,to_date(accnt_mnth || '01' || accnt_yr,'mmddyy'))) + c_one
    /*----------------------------------------------
    Limit accnt date to 10 yrs back (120 months)
    -----------------------------------------------*/
    where to_date(accnt_mnth || '01' || accnt_yr,'mmddyy') > add_months(account_date,-c_120)
    and exists
      (select 1
       from gurowner.res_cmpny_grp a
       where a.cmpny_grp = parm_targets.cmpny_grp
       and a.cmpny_cd = ta.cmpny_cd
       and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
     and cvrg_cd || rt_st_cd in
      (select b.cvrg_cd || a.rt_st_cd
       from gurowner.cvrg_rt_st_grp a
       inner join gurowner.res_cvrg_grp b
       on a.cvrg_rt_st_grp = parm_targets.cvrg_rt_st_grp
       and a.cvrg_grp = b.cvrg_grp
       and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr
       and b.ACTV_IN=c_yes and b.RSRV_TYP=c_ibnr)
     /*-----------------------------------------------------------
       Rated state and company group comparison are immediately above.
       You'll need to uncomment the other 7 tables when the UI team 
       populates dev_targets and the group tables with valid data.                                               
       ----------------------------------------------------------*/
      and exists
      (select 1
       from gurowner.res_lob_grp a
       where a.lob_grp = parm_targets.lob_grp
       and a.LOB_CD = ta.LOB_CD
       and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr);
      --and exists
      --(select 1
      -- from gurowner.res_rsk_sgmt_grp a
      -- where a.rsk_sgmt_grp = parm_targets.rsk_sgmt_grp
      -- and a.rsk_sgmt_cd = ta.rsk_sgmt_cd
      -- and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
      --and exists
      --(select 1
      -- from gurowner.res_rt_strctr_grp a
      -- where a.rt_strctr_grp = parm_targets.rt_strctr_grp
      -- and a.rt_strctr_cd = ta.rt_strctr_cd
      -- and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
      --and exists
      --(select 1
      -- from gurowner.prm_vhcl_typ_grp a
      --where a.prm_vhcl_typ_grp = parm_targets.vhcl_typ_grp
      -- and a.prm_vhcl_typ_cd = ta.vhcl_typ_cd
      -- and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
      --and exists
      --(select 1
      -- from gurowner.yrs_insrd_grp a
      -- where a.yrs_insrd_grp = parm_targets.yrs_insrd_grp
      -- and a.yrs_insrd_cd = ta.yrs_insrd_cd
      -- and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr)
      --and exists
      --(select 1
      -- from gurowner.prvt_psngr_grp a
      -- where a.prvt_psngr_grp = parm_targets.prvt_psngr_grp
      -- and a.prvt_psngr_cd = ta.prvt_psngr_cd
      -- and a.ACTV_IN=c_yes and a.RSRV_TYP=c_ibnr);
  --balance_exp := 666;
  --DBMS_OUTPUT.PUT_LINE ('balance = ' || to_char(balance_exp)
  --  || ', num = ' || to_char(balance_exp_num));
  /*----------------------------------------------------------
  First pass--summarize case amts.
  ---------------------------------------------------------*/
  open c1;
  LOOP
    fetch c1 bulk collect into l_ibnr
      limit limit_in;
      EXIT WHEN l_ibnr.count = 0;
    for i in 1 .. l_ibnr.count
    LOOP
     --ibnr_dt := to_date(l_ibnr(i).accnt_mnth || '01' || l_ibnr(i).accnt_yr,'mmddyyyy');
     --ageMonths := floor(months_between(account_date,ibnr_dt)) + 1;
     --DBMS_OUTPUT.PUT_LINE (to_char(ibnr_dt) || ', age = ' || to_char(ageMonths));
      /*----------------------------------------------------------         
      Decide which of the four types to place earned exposure in.
      ee_rssn = RV seasoned
      ee_rnew = RV new business
      ee_assn = Auto seasoned
      ee_anew = Auto new business
      ----------------------------------------------------------*/  
      EE_ANEW := 0;
      EE_ASSN := 0;
      EE_RNEW := 0;
      EE_RSSN := 0;
      IF l_ibnr(i).vhcl_typ_cd IN ('06', '14', '22', '23', '24', '29', '31') THEN
        IF l_ibnr(i).yrs_insrd_cd > 1 THEN                       
           EE_RSSN := l_ibnr(i).ERND_EXPSRE;                     
        ELSE                                   
           EE_RNEW := l_ibnr(i).ERND_EXPSRE;  
        end if;
      ELSE                                         
        IF l_ibnr(i).yrs_insrd_cd > 1 THEN                       
           EE_ASSN := l_ibnr(i).ERND_EXPSRE;                     
        ELSE                                   
           EE_ANEW := l_ibnr(i).ERND_EXPSRE;
        end if;
      end if;
      AUTO_NEW_EXP := l_ibnr(i).FREQ * l_ibnr(i).ADJ * l_ibnr(i).EMER * target_yrs * EE_ANEW / 1000; 
      AUTO_SSN_EXP := l_ibnr(i).FREQ * l_ibnr(i).ADJ * l_ibnr(i).EMER * EE_ASSN / 1000;        
      RV_NEW_EXP   := l_ibnr(i).FREQ * l_ibnr(i).ADJ * l_ibnr(i).EMER * EE_RNEW *              
                      target_yrs * target_veh / 1000;                        
      RV_SSN_EXP   := l_ibnr(i).FREQ * l_ibnr(i).ADJ * l_ibnr(i).EMER * EE_RSSN * target_veh / 1000; 
      TOTAL_WT_EXP := AUTO_NEW_EXP + AUTO_SSN_EXP + RV_NEW_EXP + 
                      RV_SSN_EXP;
      AUTO_NEW_EXP_SUM := AUTO_NEW_EXP_SUM + AUTO_NEW_EXP;                                   
      AUTO_SSN_EXP_SUM := AUTO_SSN_EXP_SUM + AUTO_SSN_EXP;                                   
      RV_NEW_EXP_SUM   := RV_NEW_EXP_SUM + RV_NEW_EXP;                                     
      RV_SSN_EXP_SUM   := RV_SSN_EXP_SUM + RV_SSN_EXP;                                     
      TOTAL_AUTO_RV_EXP := AUTO_NEW_EXP_SUM + AUTO_SSN_EXP_SUM +         
                         RV_NEW_EXP_SUM + RV_SSN_EXP_SUM;      
      --DBMS_OUTPUT.PUT_LINE (l_ibnr(i).cmpny_cd || ' '|| l_ibnr(i).rt_st_cd ||
      --  ' ' || l_ibnr(i).accnt_mnth || '01' || l_ibnr(i).accnt_yr ||
      --  ' ' || l_ibnr(i).lob_cd || '   ' || l_ibnr(i).VHCL_TYP_CD ||
      --  '  ' || l_ibnr(i).cvrg_cd || '  ' ||
      --  '   ' || to_char(l_ibnr(i).age) || 
      --  '    ' || to_char(l_ibnr(i).freq) || '    ' || to_char(l_ibnr(i).adj) ||
      --  '    ' || to_char(l_ibnr(i).emer) || '    ' || to_char(l_ibnr(i).svrty) || 
      --  '   ' || to_char(target_yrs) || '  ' || to_char(target_veh) ||
      --  '    ' || to_char(ee_anew) || '      ' || to_char(ee_assn) ||
      --  '      ' || to_char(ee_rnew) || '      ' || to_char(ee_rssn) ||
      --  '     ' || to_char(auto_new_exp) || '     ' || to_char(auto_ssn_exp) ||
      --  '     ' || to_char(rv_new_exp) || '     ' || to_char(rv_ssn_exp) ||
      --  '     ' || to_char(total_wt_exp) || '    ' || to_char(TOTAL_AUTO_RV_EXP) ||
      --  '      ' || to_char(auto_new_res) || '     ' || to_char(auto_ssn_res) ||
      --  '     ' || to_char(rv_new_res) || '       ' || to_char(rv_ssn_res) ||
      --  '   ' || to_char(total_res) || '     ' || to_char(total_auto_rv_pp));
    END LOOP;
  END LOOP;
  close c1;
  --DBMS_OUTPUT.PUT_LINE ('total auto_rv_pp = ' || to_char(total_auto_rv_pp));
  /*----------------------------------------------------------         
  The only way TOTAL_WT_EXP can be zero at this point is if the first
  fetch returned zero rows. We may want to abort here, but right
  now just show the error.
  ----------------------------------------------------------*/  
  if TOTAL_WT_EXP = 0 then
    --DBMS_OUTPUT.PUT_LINE ('No data matches this target grouping, ' || target_filename);
    parmcode := '002';
    parmbuf := 'No data matches this target grouping, ' || target_filename;
    if firstcode is null then
       firstbuf := parmbuf;
       firstcode := parmcode;
    end if;
  end if;
  --DBMS_OUTPUT.PUT_LINE('CO ST  SNAP_DT  LOB  VEH  COV  YRS  ' ||  
  --  'TRG AUTO NEW  TRG AUTO SSN  TRG RV NEW  TRG RV SSN  TOT TRG');
  
  /*----------------------------------------------------------         
  Second pass, create the target spread. Some of the variables
  will have to be recreated.
  ----------------------------------------------------------*/  
  open c1;
  LOOP
    fetch c1 bulk collect into l_ibnr
      limit limit_in;
      EXIT WHEN l_ibnr.count = 0;
    for i in 1 .. l_ibnr.count
    LOOP
      /*----------------------------------------------------------         
      Decide which of the four types to place earned exposure in.
      ee_rssn = RV seasoned
      ee_rnew = RV new business
      ee_assn = Auto seasoned
      ee_anew = Auto new business
      ----------------------------------------------------------*/  
      EE_ANEW := 0;
      EE_ASSN := 0;
      EE_RNEW := 0;
      EE_RSSN := 0;
      IF l_ibnr(i).vhcl_typ_cd IN ('22', '23', '24', '26',      
                '27', '28', '29', '31') THEN 
        IF l_ibnr(i).yrs_insrd_cd > 1 THEN                       
           EE_RSSN := l_ibnr(i).ERND_EXPSRE;                     
        ELSE                                   
           EE_RNEW := l_ibnr(i).ERND_EXPSRE;  
        end if;
      ELSE                                         
        IF l_ibnr(i).yrs_insrd_cd > 1 THEN                       
           EE_ASSN := l_ibnr(i).ERND_EXPSRE;                     
        ELSE                                   
           EE_ANEW := l_ibnr(i).ERND_EXPSRE;
        end if;
      end if;
      AUTO_NEW_PP := l_ibnr(i).FREQ * l_ibnr(i).ADJ * l_ibnr(i).EMER * target_yrs * EE_ANEW / 1000; 
      AUTO_SSN_PP := l_ibnr(i).FREQ * l_ibnr(i).ADJ * l_ibnr(i).EMER * EE_ASSN / 1000;        
      RV_NEW_PP   := l_ibnr(i).FREQ * l_ibnr(i).ADJ * l_ibnr(i).EMER * EE_RNEW *              
                      target_yrs * target_veh / 1000;                        
      RV_SSN_PP   := l_ibnr(i).FREQ * l_ibnr(i).ADJ * l_ibnr(i).EMER * EE_RSSN * target_veh / 1000;
      TOTAL_WT_PP := AUTO_NEW_PP + AUTO_SSN_PP + RV_NEW_PP + 
                      RV_SSN_PP;
      /*-----------------------------------------------                         
      * Start reserve calculations. This is the second
      * page of the Excel sample that URC gave us.
      *-----------------------------------------------*/                       
      AUTO_NEW_RES := l_ibnr(i).SEVER * AUTO_NEW_PP;                      
      AUTO_SSN_RES := l_ibnr(i).SEVER * AUTO_SSN_PP;                      
      RV_NEW_RES   := l_ibnr(i).SEVER * RV_NEW_PP;                        
      RV_SSN_RES   := l_ibnr(i).SEVER * RV_SSN_PP;                        
      TOTAL_RES    := AUTO_NEW_RES + AUTO_SSN_RES +            
                      RV_NEW_RES + RV_SSN_RES;   
      if total_auto_rv_exp = 0 then
        auto_new_targ := 0;
        auto_ssn_targ := 0;
        rv_new_targ := 0;
        rv_ssn_targ := 0;
        parmcode := '005';
        parmbuf := 'Zero divide for total_auto_rv_pp, date = ' || to_char(ibnr_dt) ||
          ', targ id = ' || to_char(target_id);
        if firstcode is null then
           firstbuf := parmbuf;
           firstcode := parmcode;
         end if;
      else
        AUTO_NEW_TARG := AUTO_NEW_PP * target / TOTAL_AUTO_RV_EXP;
        AUTO_SSN_TARG := AUTO_SSN_PP * target / TOTAL_AUTO_RV_EXP;
        RV_NEW_TARG := RV_NEW_PP * target / TOTAL_AUTO_RV_EXP;    
        RV_SSN_TARG := RV_SSN_PP * target / TOTAL_AUTO_RV_EXP;   
      end if;
      TOTAL_IBNR_RES := AUTO_NEW_TARG + AUTO_SSN_TARG +  
                     RV_NEW_TARG + RV_SSN_TARG; 
      grand_ibnr_res := grand_ibnr_res + total_ibnr_res;
      /*---------------------------------------------------------
      If target amt = 0, use reserve spread, otherwise use the
      target calculations.
      Use gur_ibnr_seq.currval to use the same sequence number that
      was generated for the insert into the parent table,
      ibnr_adj_run.
      ----------------------------------------------------------*/
      BEGIN
      if target = 0 then
        insert into GUROWNER.ibnr_ADJSTMNTS_bal
          (ibnr_adjstmnts_id, filename, accdnt_yr, 
          accdnt_mnth, cmpny_cd, rsk_sgmt_cd, 
          rt_strctr_cd, rt_st_cd, lob_cd, 
          vhcl_typ_cd, prvt_psngr_cd, yrs_insrd_cd, 
          cvrg_cd, NWBNSS_AUTO_WGHTD_IBNR_EXPSR, NWBNSS_RV_WGHTD_IBNR_EXPSR,
          SSNDBNSS_AUTO_WGHTD_IBNR_EXPSR, SSNDBNSS_RV_WGHTD_IBNR_EXPSR,
          TTL_WGHTD_IBNR_EXPSR, NWBNSS_AUTO_IBNR_RSRV, NWBNSS_RV_IBNR_RSRV, 
          SSNDBNSS_AUTO_IBNR_RSRV, SSNDBNSS_RV_IBNR_RSRV, TTL_IBNR_RSRV)
        values
          (GUROWNER.GUR_ibnr_SEQ.currval, target_filename, substr(l_ibnr(i).accnt_yr,3,2), 
          l_ibnr(i).accnt_mnth, l_ibnr(i).cmpny_cd, l_ibnr(i).rsk_sgmt_cd,
          l_ibnr(i).rt_strctr_cd, l_ibnr(i).rt_st_cd, l_ibnr(i).LOB_CD, 
          l_ibnr(i).vhcl_typ_cd, l_ibnr(i).prvt_psngr_cd, l_ibnr(i).yrs_insrd_cd,
          l_ibnr(i).CVRG_CD, AUTO_NEW_PP, RV_NEW_PP, 
          AUTO_SSN_PP, RV_SSN_PP, 
          TOTAL_WT_PP, AUTO_NEW_RES, RV_NEW_RES,
          AUTO_SSN_RES, RV_SSN_RES, TOTAL_RES);
      else
          insert into GUROWNER.ibnr_ADJSTMNTS_bal
          (ibnr_adjstmnts_id, filename, accdnt_yr, 
          accdnt_mnth, cmpny_cd, rsk_sgmt_cd, 
          rt_strctr_cd, rt_st_cd, lob_cd, 
          vhcl_typ_cd, prvt_psngr_cd, yrs_insrd_cd, 
          cvrg_cd, NWBNSS_AUTO_WGHTD_IBNR_EXPSR, NWBNSS_RV_WGHTD_IBNR_EXPSR,
          SSNDBNSS_AUTO_WGHTD_IBNR_EXPSR, SSNDBNSS_RV_WGHTD_IBNR_EXPSR,
          TTL_WGHTD_IBNR_EXPSR, NWBNSS_AUTO_IBNR_RSRV, NWBNSS_RV_IBNR_RSRV, 
          SSNDBNSS_AUTO_IBNR_RSRV, SSNDBNSS_RV_IBNR_RSRV, TTL_IBNR_RSRV)
        values
          (GUROWNER.GUR_ibnr_SEQ.currval, target_filename, substr(l_ibnr(i).accnt_yr,3,2), 
          l_ibnr(i).accnt_mnth, l_ibnr(i).cmpny_cd, l_ibnr(i).rsk_sgmt_cd,
          l_ibnr(i).rt_strctr_cd, l_ibnr(i).rt_st_cd, l_ibnr(i).LOB_CD, 
          l_ibnr(i).vhcl_typ_cd, l_ibnr(i).prvt_psngr_cd, l_ibnr(i).yrs_insrd_cd,
          l_ibnr(i).CVRG_CD, AUTO_NEW_PP, RV_NEW_PP, 
          AUTO_SSN_PP, RV_SSN_PP, 
          TOTAL_WT_PP, AUTO_NEW_TARG, RV_NEW_TARG,
          AUTO_SSN_TARG, RV_SSN_TARG, TOTAL_IBNR_RES);
          --DBMS_OUTPUT.PUT_LINE (l_ibnr(i).cmpny_cd || ' '|| l_ibnr(i).rt_st_cd ||
          --  ' ' || l_ibnr(i).accnt_yr || l_ibnr(i).accnt_mnth ||
          --  ' ' || l_ibnr(i).lob_cd || '   ' || l_ibnr(i).VHCL_TYP_CD ||
          --  '  ' || l_ibnr(i).cvrg_cd || '   ' || l_ibnr(i).yrs_insrd_cd ||
          --  '   ' || to_char(auto_new_targ) || '   ' || to_char(auto_ssn_targ) ||
          --  '   ' || to_char(rv_new_targ) || '   ' || to_char(rv_ssn_targ) ||
          --  '   ' || to_char(total_ibnr_res) || '   ' || to_char(grand_ibnr_res));
    end if;
    total_exp := total_exp + l_ibnr(i).ERND_EXPSRE;
    total_exp_num := total_exp_num + 1;
    EXCEPTION
      when DUP_VAL_ON_INDEX then
        parmcode := '996';
        parmbuf := 'Dup key ' || to_char(GUROWNER.GUR_ibnr_SEQ.currval) 
          || ' ' || target_filename || ' ' || l_ibnr(i).accnt_yr
          || ' ' || l_ibnr(i).accnt_mnth || ' ' || l_ibnr(i).cmpny_cd 
          || ' ' || l_ibnr(i).RSK_SGMT_CD || ' ' || l_ibnr(i).rt_strctr_cd
          || ' ' || l_ibnr(i).rt_st_cd
          || ' ' || l_ibnr(i).lob_cd || '   ' || l_ibnr(i).VHCL_TYP_CD
          || ' ' || l_ibnr(i).PRVT_PSNGR_CD || '   ' || l_ibnr(i).yrs_insrd_cd
          || '  ' || l_ibnr(i).cvrg_cd;
        if firstcode is null then
           firstbuf := parmbuf;
           firstcode := parmcode;
        end if;
        exit;
      END;
    END LOOP;
  END LOOP;
  close c1;
  if balance_exp = total_exp and
     balance_exp_num = total_exp_num then
     /*----------------------------------------------------------  
      Use the sequence number set in the package definition.
     ----------------------------------------------------------*/  
     if run_log_started is null then
        run_log_seq := gurowner.gur_ibnr_log_seq.nextval;
        run_log_started := 'Y';
     else
        run_log_seq := gurowner.gur_ibnr_log_seq.currval;
     end if;
     insert into gurowner.ibnr_run_log
       (log_id,target_id,filename,error_txt,target,total_spread, run_ts)
     values
      (run_log_seq,target_id,target_filename,
       parmbuf,target,grand_ibnr_res,current_timestamp);
  else
     parmbuf := 'Out of bal: bal exp = ' || to_char(balance_exp) 
     || ', bal num = ' || to_char(balance_exp_num)
     || ', tot exp = ' || to_char(total_exp) 
     || ', tot num = ' || to_char(total_exp_num);
     parmcode := '999';
     if firstcode is null then
        firstbuf := parmbuf;
        firstcode := parmcode;
     end if;
  end if;
  --DBMS_OUTPUT.PUT_LINE('total target spread = ' || to_char(grand_IBNR_RES));
  parmbuf := firstbuf;
  parmcode := firstcode;
  --DBMS_OUTPUT.PUT_LINE('parmcode = ' || parmcode ||
  --   ', parmbuf = ' || parmbuf);
  
/*----------------------------------------------------------
  Exception processing.
  Check for an overflow in the adjustment amt.
  ---------------------------------------------------------*/
  EXCEPTION
    when ibnr_overflow then
      DBMS_OUTPUT.PUT_LINE('IBNR amount overflow = ' || l_ibnr(i).accnt_yr
      || ', ' || l_ibnr(i).accnt_mnth);
END process_ibnr_rsrv_rcrds_btch;

PROCEDURE process_ibnr_rsrv_rcrds (errbuf OUT VARCHAR2, retcode OUT VARCHAR2,
    account_date in Date, parm_filename in varchar2, limit_in IN PLS_INTEGER DEFAULT 200, RUNID IN VARCHAR2, RN_CNTRL_Q_ID IN VARCHAR2 )
--  account_date in Date, parm_filename in varchar2, limit_in IN PLS_INTEGER DEFAULT 200)
  is
  /*---------------------------------------------------------------------------
  Called from Data Migrator.
  Uses the ibnr_targets table as a driver, and calls process_ibnr_rsrv_rcrds_btch
  for each row fetched.
  Parms:
  1. errbuf--Return error message to Data Migrator.
  2. retcode--Return code to Data Migrator.
  3. account_date--as of processing date, passed from process_avg_rsrv_rcrds.
  4. file name passed from Data Migrator for row to process in targets table.
  5. limit_in--a value for the number of records that cursor c1 uses in
     process_avg_rsrv_rcrds_btch for each bulk collection call. Defaults to 100.
  Input:
  1. ibnr_targets--this is the driver table for executing the code.
  ----------------------------------------------------------------------------*/
  parm_targets gurowner.ibnr_targets%rowtype;
  firstbuf  varchar2(100) := null;
  firstcode varchar2(3)   := null;
  parmbuf   varchar2(100) := null;
  parmcode  varchar2(3)   := null;
  cursor c2 is 
    /*-----------------------------------------------------------------
    This cursor retrieves rows that match file name from ibnr_targets.
    -----------------------------------------------------------------*/
    select IBNR_TARGETS_ID, FILE_ROW_NUM, FILENAME, RSK_SGMT_GRP, CMPNY_GRP, RT_STRCTR_GRP,
      CVRG_RT_ST_GRP, LOB_GRP, VHCL_TYP_GRP, YRS_INSRD_GRP, 
      PRVT_PSNGR_GRP, YRS_INSRD_FCTR, VHCL_TYP_FCTR, TRGT
      from gurowner.ibnr_targets
      where filename = rtrim(parm_filename);
  BEGIN
    errbuf := null;
    retcode := null;
    if account_date is null then
       parmcode := '004';
       parmbuf := 'Account date is null-process terminated.';
       if firstcode is null then
         firstbuf := parmbuf;
         firstcode := parmcode;
         goto bypass_run;
       end if;
    end if;
    /* truncate bal table */
    delete from gurowner.ibnr_adjstmnts_bal;
    /*----------------------------------------------------------         
    Generate the next sequence value from gur_ibnr_seq for the row id.
    It can be set up by yourself, using your user id, but when we go
    prod, it has to be set up by an administrator.
    The one used here is:
    CREATE SEQUENCE gurowner.gur_ibnr_seq
    INCREMENT BY 1
    START WITH 1
    cache 20
    noorder; 
    gur.ibnr.seq.nextval, in the code below, creates the sequence number.
    ----------------------------------------------------------*/  
    --DBMS_OUTPUT.PUT_LINE ('gurowner.gur_avg_seq.nextval'|| gurowner.gur_avg_seq.nextval);
    insert into gurowner.ibnr_adj_run
      (ibnr_adj_run_id,filename,accnt_dt,run_time,usr_id)
     values
      (gurowner.gur_ibnr_seq.nextval,rtrim(parm_filename),account_date,current_timestamp,user);
    --dbms_output.put_line('seq = ' || to_char(gurowner.gur_ibnr_seq.nextval));
    open c2;
    LOOP
      /*---------------------------------------------------------
      Fetch the row and call the spread routine.
      ----------------------------------------------------------*/
      fetch c2 into parm_targets;
      EXIT WHEN c2%NOTFOUND OR c2%NOTFOUND IS NULL;
      --DBMS_OUTPUT.PUT_LINE('target id = ' || to_char(parm_targets.ibnr_targets_id) ||
      --   ', target = ' || to_char(parm_targets.trgt));
      process_ibnr_rsrv_rcrds_btch(parm_targets, account_date, parmbuf, parmcode,
        limit_in);
      /*-------------------------------------------------------------
      Check for error code. If we have one, write it to firstcode.
      On subsequent errors, do not write over firstcode if it's 
      nonblank. That way, we'll always get the first error, not the
      last one.
      -------------------------------------------------------------*/
      if parmcode is null then
         null;
      else
         if parmcode = '999' then
            firstcode := parmcode;
            firstbuf  := parmbuf;
            exit;
         end if;
         if firstcode is null then
            firstbuf  := parmbuf;
            firstcode := parmcode;
         end if;
      end if;
    END LOOP;
    if c2%rowcount = 0 then
       parmcode := '003';
       parmbuf := 'File name not found in targets table = ' || rtrim(parm_filename);
       if firstcode is null then
         firstbuf := parmbuf;
         firstcode := parmcode;
       end if;
    end if;
    close c2;
    if parmcode > '900' then
       null;
    else
       insert into GUROWNER.ibnr_ADJSTMNTS
          (select ibnr_adjstmnts_id, filename, run_id, accdnt_yr, 
            accdnt_mnth, cmpny_cd, rsk_sgmt_cd, 
            rt_strctr_cd, rt_st_cd, lob_cd, 
            vhcl_typ_cd, prvt_psngr_cd, yrs_insrd_cd, 
            cvrg_cd, NWBNSS_AUTO_WGHTD_IBNR_EXPSR, NWBNSS_RV_WGHTD_IBNR_EXPSR,
            SSNDBNSS_AUTO_WGHTD_IBNR_EXPSR, SSNDBNSS_RV_WGHTD_IBNR_EXPSR,
            TTL_WGHTD_IBNR_EXPSR, NWBNSS_AUTO_IBNR_RSRV, NWBNSS_RV_IBNR_RSRV, 
            SSNDBNSS_AUTO_IBNR_RSRV, SSNDBNSS_RV_IBNR_RSRV, TTL_IBNR_RSRV
          FROM gurowner.IBNR_ADJSTMNTS_BAL);
    end if;
    <<bypass_run>>
    if parmcode is null then
       errbuf := 'Normal end';
       retcode := '0';
    else
       errbuf := firstbuf;
       retcode := firstcode;
    end if;
    commit;
    DBMS_OUTPUT.PUT_LINE('retcode = ' || retcode ||
       ', errbuf = ' || errbuf);
END process_ibnr_rsrv_rcrds;

PROCEDURE LOAD_IBNR_TRGTS_FCTRS (In_File_Name in varchar2, Operation_Status out number)is
  CURSOR CUR_IBNR_TARGETS_FACTORS IS
SELECT FILE_ROW_NUM,
  FILE_NAME,
  --FILE_SHEET_NAME,
  RISK_SEGMENT_GRP,
  COMPANY_GRP,
  RATE_STRUCTURE_GRP,
  CVRG_RT_ST_GRP,  
  LOB_GRP,
  VEHICLE_TYPE_GRP,
  YEARS_INSURED_GRP,
  PRIVATE_PASSENGER_GRP, 
  VHCL_TYP_FCTR,
  YRS_INSRD_FCTR,
  TRGT,
  --listagg(TRGT,',')  within group (order by FILE_ROW_NUM) TRGT,
listagg(FILE_SHEET_NAME||'--'||AGE_1,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_1  
,listagg(FILE_SHEET_NAME||'--'||AGE_2,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_2  
,listagg(FILE_SHEET_NAME||'--'||AGE_3,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_3 
,listagg(FILE_SHEET_NAME||'--'||AGE_4,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_4 
,listagg(FILE_SHEET_NAME||'--'||AGE_5,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_5 
,listagg(FILE_SHEET_NAME||'--'||AGE_6,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_6 
,listagg(FILE_SHEET_NAME||'--'||AGE_7,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_7 
,listagg(FILE_SHEET_NAME||'--'||AGE_8,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_8 
,listagg(FILE_SHEET_NAME||'--'||AGE_9,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_9 
,listagg(FILE_SHEET_NAME||'--'||AGE_10,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_10
,listagg(FILE_SHEET_NAME||'--'||AGE_11,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_11  
,listagg(FILE_SHEET_NAME||'--'||AGE_12,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_12  
,listagg(FILE_SHEET_NAME||'--'||AGE_13,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_13 
,listagg(FILE_SHEET_NAME||'--'||AGE_14,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_14 
,listagg(FILE_SHEET_NAME||'--'||AGE_15,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_15 
,listagg(FILE_SHEET_NAME||'--'||AGE_16,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_16 
,listagg(FILE_SHEET_NAME||'--'||AGE_17,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_17 
,listagg(FILE_SHEET_NAME||'--'||AGE_18,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_18 
,listagg(FILE_SHEET_NAME||'--'||AGE_19,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_19 
,listagg(FILE_SHEET_NAME||'--'||AGE_20,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_20
,listagg(FILE_SHEET_NAME||'--'||AGE_21,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_21  
,listagg(FILE_SHEET_NAME||'--'||AGE_22,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_22  
,listagg(FILE_SHEET_NAME||'--'||AGE_23,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_23 
,listagg(FILE_SHEET_NAME||'--'||AGE_24,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_24 
,listagg(FILE_SHEET_NAME||'--'||AGE_25,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_25 
,listagg(FILE_SHEET_NAME||'--'||AGE_26,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_26 
,listagg(FILE_SHEET_NAME||'--'||AGE_27,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_27 
,listagg(FILE_SHEET_NAME||'--'||AGE_28,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_28 
,listagg(FILE_SHEET_NAME||'--'||AGE_29,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_29 
,listagg(FILE_SHEET_NAME||'--'||AGE_30,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_30
,listagg(FILE_SHEET_NAME||'--'||AGE_31,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_31  
,listagg(FILE_SHEET_NAME||'--'||AGE_32,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_32  
,listagg(FILE_SHEET_NAME||'--'||AGE_33,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_33 
,listagg(FILE_SHEET_NAME||'--'||AGE_34,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_34 
,listagg(FILE_SHEET_NAME||'--'||AGE_35,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_35 
,listagg(FILE_SHEET_NAME||'--'||AGE_36,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_36 
,listagg(FILE_SHEET_NAME||'--'||AGE_37,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_37 
,listagg(FILE_SHEET_NAME||'--'||AGE_38,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_38 
,listagg(FILE_SHEET_NAME||'--'||AGE_39,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_39 
,listagg(FILE_SHEET_NAME||'--'||AGE_40,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_40
,listagg(FILE_SHEET_NAME||'--'||AGE_41,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_41  
,listagg(FILE_SHEET_NAME||'--'||AGE_42,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_42  
,listagg(FILE_SHEET_NAME||'--'||AGE_43,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_43 
,listagg(FILE_SHEET_NAME||'--'||AGE_44,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_44 
,listagg(FILE_SHEET_NAME||'--'||AGE_45,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_45 
,listagg(FILE_SHEET_NAME||'--'||AGE_46,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_46 
,listagg(FILE_SHEET_NAME||'--'||AGE_47,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_47 
,listagg(FILE_SHEET_NAME||'--'||AGE_48,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_48 
,listagg(FILE_SHEET_NAME||'--'||AGE_49,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_49 
,listagg(FILE_SHEET_NAME||'--'||AGE_50,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_50
,listagg(FILE_SHEET_NAME||'--'||AGE_51,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_51  
,listagg(FILE_SHEET_NAME||'--'||AGE_52,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_52  
,listagg(FILE_SHEET_NAME||'--'||AGE_53,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_53 
,listagg(FILE_SHEET_NAME||'--'||AGE_54,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_54 
,listagg(FILE_SHEET_NAME||'--'||AGE_55,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_55 
,listagg(FILE_SHEET_NAME||'--'||AGE_56,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_56 
,listagg(FILE_SHEET_NAME||'--'||AGE_57,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_57 
,listagg(FILE_SHEET_NAME||'--'||AGE_58,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_58 
,listagg(FILE_SHEET_NAME||'--'||AGE_59,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_59 
,listagg(FILE_SHEET_NAME||'--'||AGE_60,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_60 
,listagg(FILE_SHEET_NAME||'--'||AGE_61,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_61  
,listagg(FILE_SHEET_NAME||'--'||AGE_62,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_62  
,listagg(FILE_SHEET_NAME||'--'||AGE_63,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_63 
,listagg(FILE_SHEET_NAME||'--'||AGE_64,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_64 
,listagg(FILE_SHEET_NAME||'--'||AGE_65,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_65 
,listagg(FILE_SHEET_NAME||'--'||AGE_66,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_66 
,listagg(FILE_SHEET_NAME||'--'||AGE_67,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_67 
,listagg(FILE_SHEET_NAME||'--'||AGE_68,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_68 
,listagg(FILE_SHEET_NAME||'--'||AGE_69,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_69 
,listagg(FILE_SHEET_NAME||'--'||AGE_70,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_70
,listagg(FILE_SHEET_NAME||'--'||AGE_71,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_71  
,listagg(FILE_SHEET_NAME||'--'||AGE_72,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_72  
,listagg(FILE_SHEET_NAME||'--'||AGE_73,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_73 
,listagg(FILE_SHEET_NAME||'--'||AGE_74,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_74 
,listagg(FILE_SHEET_NAME||'--'||AGE_75,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_75 
,listagg(FILE_SHEET_NAME||'--'||AGE_76,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_76 
,listagg(FILE_SHEET_NAME||'--'||AGE_77,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_77 
,listagg(FILE_SHEET_NAME||'--'||AGE_78,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_78 
,listagg(FILE_SHEET_NAME||'--'||AGE_79,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_79 
,listagg(FILE_SHEET_NAME||'--'||AGE_80,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_80
,listagg(FILE_SHEET_NAME||'--'||AGE_81,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_81  
,listagg(FILE_SHEET_NAME||'--'||AGE_82,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_82  
,listagg(FILE_SHEET_NAME||'--'||AGE_83,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_83 
,listagg(FILE_SHEET_NAME||'--'||AGE_84,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_84 
,listagg(FILE_SHEET_NAME||'--'||AGE_85,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_85 
,listagg(FILE_SHEET_NAME||'--'||AGE_86,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_86 
,listagg(FILE_SHEET_NAME||'--'||AGE_87,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_87 
,listagg(FILE_SHEET_NAME||'--'||AGE_88,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_88 
,listagg(FILE_SHEET_NAME||'--'||AGE_89,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_89 
,listagg(FILE_SHEET_NAME||'--'||AGE_90,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_90
,listagg(FILE_SHEET_NAME||'--'||AGE_91,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_91  
,listagg(FILE_SHEET_NAME||'--'||AGE_92,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_92  
,listagg(FILE_SHEET_NAME||'--'||AGE_93,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_93 
,listagg(FILE_SHEET_NAME||'--'||AGE_94,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_94 
,listagg(FILE_SHEET_NAME||'--'||AGE_95,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_95 
,listagg(FILE_SHEET_NAME||'--'||AGE_96,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_96 
,listagg(FILE_SHEET_NAME||'--'||AGE_97,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_97 
,listagg(FILE_SHEET_NAME||'--'||AGE_98,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_98 
,listagg(FILE_SHEET_NAME||'--'||AGE_99,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_99 
,listagg(FILE_SHEET_NAME||'--'||AGE_100,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_100
,listagg(FILE_SHEET_NAME||'--'||AGE_101,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_101  
,listagg(FILE_SHEET_NAME||'--'||AGE_102,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_102  
,listagg(FILE_SHEET_NAME||'--'||AGE_103,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_103 
,listagg(FILE_SHEET_NAME||'--'||AGE_104,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_104 
,listagg(FILE_SHEET_NAME||'--'||AGE_105,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_105 
,listagg(FILE_SHEET_NAME||'--'||AGE_106,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_106 
,listagg(FILE_SHEET_NAME||'--'||AGE_107,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_107 
,listagg(FILE_SHEET_NAME||'--'||AGE_108,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_108 
,listagg(FILE_SHEET_NAME||'--'||AGE_109,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_109 
,listagg(FILE_SHEET_NAME||'--'||AGE_110,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_110
,listagg(FILE_SHEET_NAME||'--'||AGE_111,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_111  
,listagg(FILE_SHEET_NAME||'--'||AGE_112,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_112  
,listagg(FILE_SHEET_NAME||'--'||AGE_113,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_113 
,listagg(FILE_SHEET_NAME||'--'||AGE_114,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_114 
,listagg(FILE_SHEET_NAME||'--'||AGE_115,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_115 
,listagg(FILE_SHEET_NAME||'--'||AGE_116,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_116 
,listagg(FILE_SHEET_NAME||'--'||AGE_117,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_117 
,listagg(FILE_SHEET_NAME||'--'||AGE_118,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_118 
,listagg(FILE_SHEET_NAME||'--'||AGE_119,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_119 
,listagg(FILE_SHEET_NAME||'--'||AGE_120,',')  within group (order by FILE_ROW_NUM,FILE_SHEET_NAME) AGE_120 
FROM TMP_IBNR_TARGETS_FACTORS  
WHERE FILE_NAME=In_File_Name
GROUP BY FILE_ROW_NUM,FILE_NAME,RISK_SEGMENT_GRP,COMPANY_GRP,RATE_STRUCTURE_GRP,CVRG_RT_ST_GRP,LOB_GRP,VEHICLE_TYPE_GRP
,YEARS_INSURED_GRP,PRIVATE_PASSENGER_GRP,YRS_INSRD_FCTR,VHCL_TYP_FCTR,TRGT
ORDER BY FILE_ROW_NUM;

REC_IBNR_TARGETS_FACTORS CUR_IBNR_TARGETS_FACTORS%ROWTYPE;


ageFactors varchar2(400);
expectedFrequencyFactor numeric(5,2);
calendarAgeFactor numeric(5,4);
emergenceFactor numeric(5,4);
severityFactor numeric(6,0);

fileName varchar2(100);
BEGIN
Operation_Status:=0;
--DBMS_OUTPUT.put_line(In_File_Name);
Open CUR_IBNR_TARGETS_FACTORS;
Loop
fetch CUR_IBNR_TARGETS_FACTORS INTO REC_IBNR_TARGETS_FACTORS;
exit when CUR_IBNR_TARGETS_FACTORS%NOTFOUND;

--DBMS_OUTPUT.put_line(REC_IBNR_TARGETS_FACTORS.RISK_SEGMENT_GRP);
fileName := REC_IBNR_TARGETS_FACTORS.FILE_NAME;
--DBMS_OUTPUT.put_line( REC_IBNR_TARGETS_FACTORS.TRGT);
INSERT
INTO IBNR_TARGETS
  (
    IBNR_TARGETS_ID,
    FILE_ROW_NUM,
    FILENAME,
    RSK_SGMT_GRP,
    CMPNY_GRP,
    RT_STRCTR_GRP,
    CVRG_RT_ST_GRP,
    LOB_GRP,
    VHCL_TYP_GRP,
    YRS_INSRD_GRP,
    PRVT_PSNGR_GRP,
    VHCL_TYP_FCTR,
    YRS_INSRD_FCTR,
    TRGT
  )
  VALUES
  (
    GUROWNER.GUR_IBNR_TRGT_SEQ.NEXTVAL,
    REC_IBNR_TARGETS_FACTORS.FILE_ROW_NUM,
    REC_IBNR_TARGETS_FACTORS.FILE_NAME,
    REC_IBNR_TARGETS_FACTORS.RISK_SEGMENT_GRP,
    REC_IBNR_TARGETS_FACTORS.COMPANY_GRP,
    REC_IBNR_TARGETS_FACTORS.RATE_STRUCTURE_GRP,
    REC_IBNR_TARGETS_FACTORS.CVRG_RT_ST_GRP,
    REC_IBNR_TARGETS_FACTORS.LOB_GRP,
    REC_IBNR_TARGETS_FACTORS.VEHICLE_TYPE_GRP,
    REC_IBNR_TARGETS_FACTORS.YEARS_INSURED_GRP,
    REC_IBNR_TARGETS_FACTORS.PRIVATE_PASSENGER_GRP,
    REC_IBNR_TARGETS_FACTORS.VHCL_TYP_FCTR,
    REC_IBNR_TARGETS_FACTORS.YRS_INSRD_FCTR,
    REC_IBNR_TARGETS_FACTORS.TRGT
  );

FOR i in 1..120
LOOP

ageFactors:= Case i
      WHEN 1 THEN REC_IBNR_TARGETS_FACTORS.AGE_1
      WHEN 2 THEN REC_IBNR_TARGETS_FACTORS.AGE_2
      WHEN 3 THEN REC_IBNR_TARGETS_FACTORS.AGE_3
      WHEN 4 THEN REC_IBNR_TARGETS_FACTORS.AGE_4
      WHEN 5 THEN REC_IBNR_TARGETS_FACTORS.AGE_5
      WHEN 6 THEN REC_IBNR_TARGETS_FACTORS.AGE_6
      WHEN 7 THEN REC_IBNR_TARGETS_FACTORS.AGE_7
      WHEN 8 THEN REC_IBNR_TARGETS_FACTORS.AGE_8
      WHEN 9 THEN REC_IBNR_TARGETS_FACTORS.AGE_9
      WHEN 10 THEN REC_IBNR_TARGETS_FACTORS.AGE_10
      WHEN 11 THEN REC_IBNR_TARGETS_FACTORS.AGE_11
      WHEN 12 THEN REC_IBNR_TARGETS_FACTORS.AGE_12
      WHEN 13 THEN REC_IBNR_TARGETS_FACTORS.AGE_13
      WHEN 14 THEN REC_IBNR_TARGETS_FACTORS.AGE_14
      WHEN 15 THEN REC_IBNR_TARGETS_FACTORS.AGE_15
      WHEN 16 THEN REC_IBNR_TARGETS_FACTORS.AGE_16
      WHEN 17 THEN REC_IBNR_TARGETS_FACTORS.AGE_17
      WHEN 18 THEN REC_IBNR_TARGETS_FACTORS.AGE_18
      WHEN 19 THEN REC_IBNR_TARGETS_FACTORS.AGE_19
      WHEN 20 THEN REC_IBNR_TARGETS_FACTORS.AGE_20
      WHEN 21 THEN REC_IBNR_TARGETS_FACTORS.AGE_21
      WHEN 22 THEN REC_IBNR_TARGETS_FACTORS.AGE_22
      WHEN 23 THEN REC_IBNR_TARGETS_FACTORS.AGE_23
      WHEN 24 THEN REC_IBNR_TARGETS_FACTORS.AGE_24
      WHEN 25 THEN REC_IBNR_TARGETS_FACTORS.AGE_25
      WHEN 26 THEN REC_IBNR_TARGETS_FACTORS.AGE_26
      WHEN 27 THEN REC_IBNR_TARGETS_FACTORS.AGE_27
      WHEN 28 THEN REC_IBNR_TARGETS_FACTORS.AGE_28
      WHEN 29 THEN REC_IBNR_TARGETS_FACTORS.AGE_29
      WHEN 30 THEN REC_IBNR_TARGETS_FACTORS.AGE_30
      WHEN 31 THEN REC_IBNR_TARGETS_FACTORS.AGE_31
      WHEN 32 THEN REC_IBNR_TARGETS_FACTORS.AGE_32
      WHEN 33 THEN REC_IBNR_TARGETS_FACTORS.AGE_33
      WHEN 34 THEN REC_IBNR_TARGETS_FACTORS.AGE_34
      WHEN 35 THEN REC_IBNR_TARGETS_FACTORS.AGE_35
      WHEN 36 THEN REC_IBNR_TARGETS_FACTORS.AGE_36
      WHEN 37 THEN REC_IBNR_TARGETS_FACTORS.AGE_37
      WHEN 38 THEN REC_IBNR_TARGETS_FACTORS.AGE_38
      WHEN 39 THEN REC_IBNR_TARGETS_FACTORS.AGE_39
      WHEN 40 THEN REC_IBNR_TARGETS_FACTORS.AGE_40
      WHEN 41 THEN REC_IBNR_TARGETS_FACTORS.AGE_41
      WHEN 42 THEN REC_IBNR_TARGETS_FACTORS.AGE_42
      WHEN 43 THEN REC_IBNR_TARGETS_FACTORS.AGE_43
      WHEN 44 THEN REC_IBNR_TARGETS_FACTORS.AGE_44
      WHEN 45 THEN REC_IBNR_TARGETS_FACTORS.AGE_45
      WHEN 46 THEN REC_IBNR_TARGETS_FACTORS.AGE_46
      WHEN 47 THEN REC_IBNR_TARGETS_FACTORS.AGE_47
      WHEN 48 THEN REC_IBNR_TARGETS_FACTORS.AGE_48
      WHEN 49 THEN REC_IBNR_TARGETS_FACTORS.AGE_49
      WHEN 50 THEN REC_IBNR_TARGETS_FACTORS.AGE_50
      WHEN 51 THEN REC_IBNR_TARGETS_FACTORS.AGE_51
      WHEN 52 THEN REC_IBNR_TARGETS_FACTORS.AGE_52
      WHEN 53 THEN REC_IBNR_TARGETS_FACTORS.AGE_53
      WHEN 54 THEN REC_IBNR_TARGETS_FACTORS.AGE_54
      WHEN 55 THEN REC_IBNR_TARGETS_FACTORS.AGE_55
      WHEN 56 THEN REC_IBNR_TARGETS_FACTORS.AGE_56
      WHEN 57 THEN REC_IBNR_TARGETS_FACTORS.AGE_57
      WHEN 58 THEN REC_IBNR_TARGETS_FACTORS.AGE_58
      WHEN 59 THEN REC_IBNR_TARGETS_FACTORS.AGE_59
      WHEN 60 THEN REC_IBNR_TARGETS_FACTORS.AGE_60
      WHEN 61 THEN REC_IBNR_TARGETS_FACTORS.AGE_61
      WHEN 62 THEN REC_IBNR_TARGETS_FACTORS.AGE_62
      WHEN 63 THEN REC_IBNR_TARGETS_FACTORS.AGE_63
      WHEN 64 THEN REC_IBNR_TARGETS_FACTORS.AGE_64
      WHEN 65 THEN REC_IBNR_TARGETS_FACTORS.AGE_65
      WHEN 66 THEN REC_IBNR_TARGETS_FACTORS.AGE_66
      WHEN 67 THEN REC_IBNR_TARGETS_FACTORS.AGE_67
      WHEN 68 THEN REC_IBNR_TARGETS_FACTORS.AGE_68
      WHEN 69 THEN REC_IBNR_TARGETS_FACTORS.AGE_69
      WHEN 70 THEN REC_IBNR_TARGETS_FACTORS.AGE_70
      WHEN 71 THEN REC_IBNR_TARGETS_FACTORS.AGE_71
      WHEN 72 THEN REC_IBNR_TARGETS_FACTORS.AGE_72
      WHEN 73 THEN REC_IBNR_TARGETS_FACTORS.AGE_73
      WHEN 74 THEN REC_IBNR_TARGETS_FACTORS.AGE_74
      WHEN 75 THEN REC_IBNR_TARGETS_FACTORS.AGE_75
      WHEN 76 THEN REC_IBNR_TARGETS_FACTORS.AGE_76
      WHEN 77 THEN REC_IBNR_TARGETS_FACTORS.AGE_77
      WHEN 78 THEN REC_IBNR_TARGETS_FACTORS.AGE_78
      WHEN 79 THEN REC_IBNR_TARGETS_FACTORS.AGE_79
      WHEN 80 THEN REC_IBNR_TARGETS_FACTORS.AGE_80
      WHEN 81 THEN REC_IBNR_TARGETS_FACTORS.AGE_81
      WHEN 82 THEN REC_IBNR_TARGETS_FACTORS.AGE_82
      WHEN 83 THEN REC_IBNR_TARGETS_FACTORS.AGE_83
      WHEN 84 THEN REC_IBNR_TARGETS_FACTORS.AGE_84
      WHEN 85 THEN REC_IBNR_TARGETS_FACTORS.AGE_85
      WHEN 86 THEN REC_IBNR_TARGETS_FACTORS.AGE_86
      WHEN 87 THEN REC_IBNR_TARGETS_FACTORS.AGE_87
      WHEN 88 THEN REC_IBNR_TARGETS_FACTORS.AGE_88
      WHEN 89 THEN REC_IBNR_TARGETS_FACTORS.AGE_89
      WHEN 90 THEN REC_IBNR_TARGETS_FACTORS.AGE_90
      WHEN 91 THEN REC_IBNR_TARGETS_FACTORS.AGE_91
      WHEN 92 THEN REC_IBNR_TARGETS_FACTORS.AGE_92
      WHEN 93 THEN REC_IBNR_TARGETS_FACTORS.AGE_93
      WHEN 94 THEN REC_IBNR_TARGETS_FACTORS.AGE_94
      WHEN 95 THEN REC_IBNR_TARGETS_FACTORS.AGE_95
      WHEN 96 THEN REC_IBNR_TARGETS_FACTORS.AGE_96
      WHEN 97 THEN REC_IBNR_TARGETS_FACTORS.AGE_97
      WHEN 98 THEN REC_IBNR_TARGETS_FACTORS.AGE_98
      WHEN 99 THEN REC_IBNR_TARGETS_FACTORS.AGE_99
      WHEN 100 THEN REC_IBNR_TARGETS_FACTORS.AGE_100
      WHEN 101 THEN REC_IBNR_TARGETS_FACTORS.AGE_101
      WHEN 102 THEN REC_IBNR_TARGETS_FACTORS.AGE_102
      WHEN 103 THEN REC_IBNR_TARGETS_FACTORS.AGE_103
      WHEN 104 THEN REC_IBNR_TARGETS_FACTORS.AGE_104
      WHEN 105 THEN REC_IBNR_TARGETS_FACTORS.AGE_105
      WHEN 106 THEN REC_IBNR_TARGETS_FACTORS.AGE_106
      WHEN 107 THEN REC_IBNR_TARGETS_FACTORS.AGE_107
      WHEN 108 THEN REC_IBNR_TARGETS_FACTORS.AGE_108
      WHEN 109 THEN REC_IBNR_TARGETS_FACTORS.AGE_109
      WHEN 110 THEN REC_IBNR_TARGETS_FACTORS.AGE_110
      WHEN 111 THEN REC_IBNR_TARGETS_FACTORS.AGE_111
      WHEN 112 THEN REC_IBNR_TARGETS_FACTORS.AGE_112
      WHEN 113 THEN REC_IBNR_TARGETS_FACTORS.AGE_113
      WHEN 114 THEN REC_IBNR_TARGETS_FACTORS.AGE_114
      WHEN 115 THEN REC_IBNR_TARGETS_FACTORS.AGE_115
      WHEN 116 THEN REC_IBNR_TARGETS_FACTORS.AGE_116
      WHEN 117 THEN REC_IBNR_TARGETS_FACTORS.AGE_117
      WHEN 118 THEN REC_IBNR_TARGETS_FACTORS.AGE_118
      WHEN 119 THEN REC_IBNR_TARGETS_FACTORS.AGE_119
      WHEN 120 THEN REC_IBNR_TARGETS_FACTORS.AGE_120
      END;

calendarAgeFactor :=regexp_substr(regexp_substr(ageFactors,'[^,]+', 1,1),'[^--]+',1,2);
emergenceFactor:=regexp_substr(regexp_substr(ageFactors,'[^,]+', 1,2),'[^--]+',1,2);
expectedFrequencyFactor:=regexp_substr(regexp_substr(ageFactors,'[^,]+', 1,3),'[^--]+',1,2);
severityFactor:=regexp_substr(regexp_substr(ageFactors,'[^,]+', 1,4),'[^--]+',1,2);

--DBMS_OUTPUT.put_line(REC_IBNR_TARGETS_FACTORS.FILE_ROW_NUM ||'--'||i);

INSERT INTO IBNR_FACTORS
  (IBNR_SEVERITY_ID, AGE, EXP_FREQ_FCTR,CAL_YR_ADJ_FCTR,EMRGNC_FCTR,SVRTY) VALUES
  (GUROWNER.GUR_IBNR_TRGT_SEQ.CURRVAL, i, expectedFrequencyFactor,calendarAgeFactor,emergenceFactor,severityFactor);
  
END LOOP; 

END LOOP;
CLOSE CUR_IBNR_TARGETS_FACTORS;

DELETE FROM TMP_IBNR_TARGETS_FACTORS WHERE  FILE_NAME = fileName;

--COMMIT;
Operation_Status:=1;
Exception 
WHEN OTHERS THEN
ROLLBACK;
--DBMS_OUTPUT.put_line('Sunil');
Operation_Status:=-1;
END LOAD_IBNR_TRGTS_FCTRS;

PROCEDURE APPLY_IBNR_RUNID (In_File_Name in varchar2,In_RunId in varchar2,UserId in varchar2,
Operation_Status out number)is  
BEGIN
Operation_Status:=0;

UPDATE IBNR_ADJSTMNTS
SET RUN_ID=In_RunId
WHERE FILENAME = In_File_Name;

UPDATE IBNR_ADJ_RUN
SET RUN_ID=In_RunId
,USR_ID=UserId
WHERE FILENAME = In_File_Name;

UPDATE RN_CNTRL_Q
SET RUNID=In_RunId
,DT_UPDT = SYSDATE
,UPDT_USR_ID = UserId
WHERE  FILENAME = In_File_Name;

--COMMIT;
Operation_Status:=1;
Exception 
WHEN OTHERS THEN
ROLLBACK;
Operation_Status:=-1;
END APPLY_IBNR_RUNID;

PROCEDURE CLEAN_IBNR_TRGTS_FCTRS (In_File_Name in varchar2,Operation_Status out number)is  
BEGIN
Operation_Status:=0;

INSERT
INTO IBNR_TARGETS_ARCH
  (
    IBNR_TARGETS_ID,
    FILE_ROW_NUM,
    FILENAME,
    RSK_SGMT_GRP,
    CMPNY_GRP,
    RT_STRCTR_GRP,
    CVRG_RT_ST_GRP,
    LOB_GRP,
    VHCL_TYP_GRP,
    YRS_INSRD_GRP,
    PRVT_PSNGR_GRP,
    YRS_INSRD_FCTR,
    VHCL_TYP_FCTR,
    TRGT,
    DT_UPDT
  )  
SELECT IBNR_TARGETS_ID,
  FILE_ROW_NUM,
  FILENAME,
  RSK_SGMT_GRP,
  CMPNY_GRP,
  RT_STRCTR_GRP,
  CVRG_RT_ST_GRP,
  LOB_GRP,
  VHCL_TYP_GRP,
  YRS_INSRD_GRP,
  PRVT_PSNGR_GRP,
  YRS_INSRD_FCTR,
  VHCL_TYP_FCTR,
  TRGT,
  SYSDATE
FROM IBNR_TARGETS 
WHERE FILENAME=In_File_Name
ORDER BY IBNR_TARGETS_ID,FILE_ROW_NUM;

INSERT
INTO IBNR_FACTORS_ARCH
  (
    IBNR_SEVERITY_ID,
    AGE,
    EXP_FREQ_FCTR,
    CAL_YR_ADJ_FCTR,
    EMRGNC_FCTR,
    SVRTY,
    DT_UPDT
  )
SELECT as1.IBNR_SEVERITY_ID, as1.AGE, as1.EXP_FREQ_FCTR,as1.CAL_YR_ADJ_FCTR,as1.EMRGNC_FCTR,as1.SVRTY, SYSDATE FROM IBNR_FACTORS as1
WHERE EXISTS (SELECT 1 FROM IBNR_TARGETS at1 WHERE at1.IBNR_TARGETS_ID =as1.IBNR_SEVERITY_ID
AND at1.FILENAME=In_File_Name
) order by as1.IBNR_SEVERITY_ID,as1.AGE;

DELETE
FROM IBNR_FACTORS as1
WHERE EXISTS (SELECT 1 FROM IBNR_TARGETS at1 WHERE at1.IBNR_TARGETS_ID =as1.IBNR_SEVERITY_ID
AND at1.FILENAME=In_File_Name);

DELETE
FROM IBNR_TARGETS WHERE FILENAME=In_File_Name;


COMMIT;
Operation_Status:=1;
Exception 
WHEN OTHERS THEN
ROLLBACK;
Operation_Status:=-1;
END CLEAN_IBNR_TRGTS_FCTRS;

END PKG_IBNR_RESERVE;